# events {
# }
# http {
#   server {
#     listen 80;

#     # To forward the original client's IP address 
#     proxy_set_header X-Forwarded-For $proxy_protocol_addr;
#     # to forward the  original protocol (HTTP or HTTPS)
#     proxy_set_header X-Forwarded-Proto $scheme;
#     # to forward the original host requested by the client
#     proxy_set_header Host $host;

#     location / {
#       # root   /data/www;
#       # # to support in app routing in SPA
#       # try_files $uri $uri/ /index.html;
#       proxy_pass http://keycloak:8080;
#     }

#     # location /auth/ {
#     #   rewrite ^/auth(/.*)$ $1 break;
#     #   proxy_pass http://keycloak:8080;
#     # }
#   }
# }

events {
}
http {
  server {
    listen 80;

    server_name _;
    return 301 https://$host$request_uri;
  }
  server {
 
    include       /etc/nginx/mime.types;
   
    listen 443 ssl;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_certificate  /etc/letsencrypt/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/privkey.pem;

    proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address 
    proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
    proxy_set_header Host $host; # to forward the original host requested by the client
    
    location / {
      proxy_pass http://mykeycloak:8080;
    }

  }
}
