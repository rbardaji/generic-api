version: '3'
services:

  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ${POSTGRES_DATA_FOLDER}:/var/lib/postgresql/data
    restart: always

  keycloak:
    container_name: keycloak
    build: ./docker/keycloak
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - PROXY_ADDRESS_FORWARDING=true
      # - KEYCLOAK_IMPORT=/tmp/import-realm.json
    ports:
      # - "${KEYCLOAK_PORT}:8443"
      - "${KEYCLOAK_PORT}:8080"
    volumes:
      - ${KEYCLOAK_DATA_FOLDER}:/opt/keycloak/data/
      # - ./docker/keycloak/realm-export.json:/tmp/import-realm.json  
    depends_on:
      - postgres
    restart: always
    # command: start --optimized --hostname-port=${KEYCLOAK_PORT}
    command: start-dev
    # command: start --proxy=edge --hostname-strict-https=false

  # keycloak:
  #   container_name: keycloak
  #   image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION}
  #   environment:
  #     - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
  #     - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
  #     - PROXY_ADDRESS_FORWARDING=true
  #   ports:
  #     - "${KEYCLOAK_PORT}:8080"
  #   volumes:
  #     - ${KEYCLOAK_DATA_FOLDER}:/opt/keycloak/data/
  #   restart: always
  #   # command: start-dev
  #   # entrypoint: /opt/keycloak/bin/kc.sh start --proxy edge --hostname-strict-https=false

  mongodb:
    container_name: mongodb
    image: mongo:${MONGO_VERSION}
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ADMIN}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ADMIN_PASSWORD}
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - ${MONGO_DATA_FOLDER}:/data/db
    restart: always

  generic-api:
    container_name: generic-api
    build: ./docker/generic-api
    working_dir: /code
    command: uvicorn app.main:app --host 0.0.0.0 --reload
    environment:
      DEBUG: 1
    volumes:
      - .:/code
    ports:
      - "${GENERIC_API_PORT}:8000"
    restart: always

  rproxy: 
    image: nginx:latest
    container_name: nginx_rproxy
    restart: unless-stopped
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./www:/data/www   
    ports:
      - 80:80